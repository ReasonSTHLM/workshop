// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Yoga = require("@ostera/reiki/lib/js/src/Yoga.bs.js");
var React = require("react");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Text$Workshop = require("./Text.bs.js");
var Style$Workshop = require("./Style.bs.js");

function fullScreenNode() {
  return Yoga.Node[/* create */0](/* record */[
              /* width */window.visualViewport.width,
              /* height */window.visualViewport.height,
              /* justify_content : Center */1,
              /* flex_direction : Column */0,
              /* align_items : Center */2
            ]);
}

var loaderStyle = Style$Workshop.zIndex(-10, Style$Workshop.bgColor(/* Background */6, Style$Workshop.reset));

var textStyle = Style$Workshop.textColor(/* Black */2, Style$Workshop.reset);

var component = ReasonReact.statelessComponent("Loader");

function make(width, height, phase, children) {
  var text_node = Yoga.Node[/* create */0](/* record */[
        /* width */70,
        /* height */20,
        /* justify_content : Center */1,
        /* flex_direction : Column */0,
        /* align_items : Center */2
      ]);
  var node = Yoga.Node[/* calculateLayout */2](/* record */[
        /* width */width,
        /* height */height,
        /* direction : Left_to_right */1
      ], Yoga.Node[/* insertChild */1](text_node, 0, fullScreenNode(/* () */0)));
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var tmp;
              switch (phase) {
                case 0 : 
                    tmp = ReasonReact.element(undefined, undefined, Text$Workshop.make(text_node, textStyle, /* array */["Loading..."]));
                    break;
                case 1 : 
                    tmp = ReasonReact.element(undefined, undefined, Text$Workshop.make(text_node, textStyle, /* array */["ERROR"]));
                    break;
                case 2 : 
                    tmp = children;
                    break;
                
              }
              return React.createElement("div", {
                          style: Style$Workshop.project(node, loaderStyle)
                        }, tmp);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.fullScreenNode = fullScreenNode;
exports.loaderStyle = loaderStyle;
exports.textStyle = textStyle;
exports.component = component;
exports.make = make;
/* loaderStyle Not a pure module */
